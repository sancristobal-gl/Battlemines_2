include("cmake_utils/gather_subdirs.cmake")

function(configure_subprojects main_project_name out_link_libraries unit_tests_file_tag)
    get_filename_component(abs_include_dir "../include/${main_project_name}" REALPATH)
    gather_subdirs(subdirs ${abs_include_dir})
    foreach(subdir ${subdirs})
        set(subproject_name ${main_project_name}.${subdir})
        set(file_excludes ".*\\${unit_tests_file_tag}.*")
		fill_platform_excludes(platform_excludes)
		list(APPEND file_excludes ${platform_excludes})
		gather_files(header_files true "../include/${main_project_name}/${subdir}/*.h;../include/${main_project_name}/${subdir}/*.inl;../src/${subdir}/*.h;../src/${subdir}/*.inl" "${file_excludes}")
        gather_files(src_files true "../src/${subdir}/*.cpp" "${file_excludes}")
        setup_visual_studio_filters("${main_project_name};${subdir};include;src" header_files ${subproject_name})
        setup_visual_studio_filters("${main_project_name};${subdir};src" src_files ${subproject_name})

        set(subproject_type STATIC)

        if (project_config_${subdir}_type)
            set(subproject_type ${project_config_${subdir}_type})
        endif()

        if (NOT subproject_type STREQUAL EXE)
            if (src_files)
                add_library(${subproject_name} ${subproject_type} ${src_files} ${header_files})
                if (NOT subproject_type STREQUAL SHARED)
                    list(APPEND ${out_link_libraries} ${subproject_name})
                endif()
                enable_warnings(${subproject_name} false)
            elseif (header_files)
                add_library(${subproject_name} INTERFACE ${header_files})
                enable_warnings(${subproject_name} true)
            endif()
        else()
            add_executable(${subproject_name} ${src_files} ${header_files})
        endif()

        if (project_config_${subproject_name}_dependencies)
            add_dependencies(${subproject_name} ${project_config_${subproject_name}_dependencies})
        endif()

        if (project_config_${subproject_name}_link_libraries)
            target_link_directories(${subproject_name} PUBLIC ${CMAKE_BINARY_DIR})
            target_link_libraries(${subproject_name} ${project_config_${subproject_name}_link_libraries})
        endif()

        set_target_properties(${subproject_name} PROPERTIES LINKER_LANGUAGE CXX FOLDER "${internals_project_folder}")
    endforeach()

    set(${out_link_libraries} ${${out_link_libraries}} PARENT_SCOPE)
endfunction()
